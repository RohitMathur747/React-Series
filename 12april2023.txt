1)Controlled Function
*****************************************************************************************************************
import React, { useState } from 'react';
import "./Controllerfunction.css";

const Controllerfunction = () => {
  const [formData, setFormData] = useState({
    username: "",
    email: "",
    password: "",
    confirmPassword: ""
  });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Basic validation
    if (formData.password !== formData.confirmPassword) {
      alert("Passwords do not match!");
      return;
    }
    alert("Form submitted!");
    // You can add further logic for form submission here
  };

  return (
    <div>
      <form id="form_card" onSubmit={handleSubmit}>
        <fieldset>
          <legend>Sign Up</legend>
          
          <label htmlFor="username">Username:</label>
          <input 
            type="text" 
            id="username" 
            name="username" 
            value={formData.username} 
            onChange={handleChange}
          />
          
          <label htmlFor="email">Email:</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            value={formData.email} 
            onChange={handleChange}
          />
          
          <label htmlFor="password">Password:</label>
          <input 
            type="password" 
            id="password" 
            name="password" 
            value={formData.password} 
            onChange={handleChange}
          />
          
          <label htmlFor="confirmPassword">Confirm Password:</label>
          <input 
            type="password" 
            id="confirmPassword" 
            name="confirmPassword" 
            value={formData.confirmPassword} 
            onChange={handleChange}
          />
          
          <button type="submit">Submit</button>
        </fieldset>
      </form>
    </div>
  );
}

export default Controllerfunction;


********************************************************************************************************************
2)uncontrolledFunction 
*********************************************************************************************************************
import React, { useRef } from 'react'
import "../Controlled/Controllerfunction.css";

const Uncontrolledfunction = () => {
    let nameRef=useRef();
    let emailRef=useRef();
    let passwordRef=useRef();
    let confirmpassRef=useRef();
    
    let handledata=(e)=>{
        e.preventDefault();
        //console.log(nameref);

        let name=nameRef.current.value;
        let email=emailRef.current.value;
        let pass=passwordRef.current.value;
        let cpass=confirmpassRef.current.value;
        if(pass===cpass){
            console.log(name,email,pass)
        }
    }
return (
    <div>
        <form id="form_card" action="" onSubmit={handledata}>
            <fieldset>
                <legend>
                    Sign Up:-
                </legend>
                <label htmlFor="">Username :</label>
                <input type="text" ref={nameRef}></input>
                <label htmlFor="">Email :</label>
                <input type="email" ref={emailRef}></input>
                <label htmlFor="">Password :</label>
                <input type="password" ref={passwordRef}></input>
                <label htmlFor="">Confirm Password :</label>
                <input type="password" ref={confirmpassRef}></input>
                <button type="submit">Submit</button>
            </fieldset>
        </form>
    </div>
)
}

export default Uncontrolledfunction
*******************************************************************************************************************
3)UncontrolledClass
********************************************************************************************************************
import React,{Component,createRef} from 'react';
import "../Controlled/Controllerfunction.css";

class  UnControlledClass extends Component{
    nameRef=createRef();
    emailRef=createRef();
    passwordRef=createRef();
    confirmpasswordRef=createRef();

    handledata=(e)=>{
        e.preventDefault();
        let name=this.nameRef.current.value;
        let email=this.emailRef.current.value;
        let pass=this.passwordRef.current.value;
        let cpass=this.confirmpasswordRef.current.value;
        if(pass===cpass){
            console.log(name,email,pass);           
        }
    }

    render(){
    return (
    <div>
        <form id="form_card" action="" onSubmit={this.handledata}>
            <fieldset>
                <legend>
                    Sign Up:-
                </legend>
                <label htmlFor="">Username :</label>
                <input type="text" ref={this.nameRef}></input>
                <label htmlFor="">Email :</label>
                <input type="email" ref={this.emailRef}></input>
                <label htmlFor="">Password :</label>
                <input type="password" ref={this.passwordRef}></input>
                <label htmlFor="">Confirm Password :</label>
                <input type="password" ref={this.confirmpasswordRef}></input>
                <button type="submit">Submit</button>
            </fieldset>
        </form>        
    </div>
)
}
}
export default UnControlledClass
**************************************************************************************************************
4)Css Style
*****************************************************************************************************************
* {
  margin: 0;
  padding: 0;
  font-size: 22px;
}
button {
  color: aliceblue;
  background-color: rgb(47, 122, 56);
  padding: 5px 10px;
  width: 260px;
  border: none;
  margin: 10px 0px 20px;
}
legend {
  color: white;
  background-color: black;
  padding: 10px 15px;
  border: none;
  border-radius: 10px;
  margin: 20px;
}
fieldset {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 20px auto;
  width: 400px;
  height: 500px;
  display: flex;
  border-radius: 10px 0px;
}
input {
  margin: 10px;
  width: 250px;
  font-size: 18px;
  height: 40px;
  color: #101010;
  border-radius: 2px 5px;
}